#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xgpio.h"
#include "sleep.h"

#define RED 0x04
#define GREEN 0x02
#define BLUE 0x03

XGpio gpio;

int main() {

init_platform();

// Initialize GPIO
XGpio_Initialize(&gpio, XPAR_AXI_GPIO_0_DEVICE_ID);

// Set the input/output direction of all discrete signals for the specified GPIO channel
XGpio_SetDataDirection(&gpio, 1, 0); // GPIO output channel 1 (RGB LEDs)
XGpio_SetDataDirection(&gpio, 2, 1); // GPIO input channel 2 (push buttons)

print("RDG LED Demo\n\r");

int button;
	while (1) {

		// Read from input channel 2
		button = XGpio_DiscreteRead(&gpio, 2);

		switch (button) {
		case 1:
			xil_printf("%d: ",button);
			XGpio_DiscreteWrite(&gpio, 1, RED);
			print("\tRED\n\r");
			break;
		case 2:
			xil_printf("%d: ",button);
			XGpio_DiscreteWrite(&gpio, 1, GREEN);
			print("\tGREEN\n\r");
			break;
		case 4:
			xil_printf("%d: ",button);
			XGpio_DiscreteWrite(&gpio, 1, BLUE);
			print("\tBLUE\n\r");
			break;
		case 8:
			xil_printf("%d: ", button);
			print("\tRGB\n\r");
			XGpio_DiscreteWrite(&gpio, 1, RED);
			sleep(1);
			//XGpio_DiscreteClear(&gpio, 1, RED);
			//sleep(1);

			XGpio_DiscreteWrite(&gpio, 1, GREEN);
			sleep(1);
			//XGpio_DiscreteClear(&gpio, 1, GREEN);
			//sleep(1);

			XGpio_DiscreteWrite(&gpio, 1, BLUE);
			sleep(1);
			//XGpio_DiscreteClear(&gpio, 1, BLUE);
			//sleep(1);
			break;
		default:
			XGpio_DiscreteClear(&gpio, 1, RED);
			XGpio_DiscreteClear(&gpio, 1, GREEN);
			XGpio_DiscreteClear(&gpio, 1, BLUE);
			break;
		}
	}

	//driverInit();

	//configGpio();

	//runProject();

	cleanup_platform();
	return 0;
}
