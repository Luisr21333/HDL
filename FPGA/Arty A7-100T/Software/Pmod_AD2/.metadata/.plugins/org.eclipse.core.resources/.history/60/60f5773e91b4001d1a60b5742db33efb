/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "PmodAD2.h"
//#include "xil_printf.h"
#include "sleep.h"
#include "xil_cache.h"
#include "xparameters.h"

PmodAD2 myDevice;

u16 conv;
u8 channel;
double voltage;

int main() {

	print("Hello World\n\r");
	print("Successfully ran Hello World application");

AD2_begin(&myDevice, XPAR_PMODAD2_0_AXI_LITE_IIC_BASEADDR, AD2_IIC_ADDR);

// Turn on channel 0, pin V1
AD2_WriteConfig(&myDevice, AD2_CONFIG_CH0);

// Turn on channel 0 & 1, pin V1 & V2
//AD2_WriteConfig(&myDevice, AD2_CONFIG_CH0 | AD2_CONFIG_CH1);

// Turn on all channels
//AD2_WriteConfig(&myDevice, AD2_DEFAULT_CONFIG);

	while(1) {
    // Keep 12-bit result, masking or bit select
    conv &= 0xFFF;

	AD2_ReadConv(&myDevice, &conv);
	//Scale captured data such that 0x000:0xFFF => 0.0:3.3
	voltage = (double) (conv & AD2_DATA_MASK) * 3.3 / (AD2_DATA_MASK + 1);

	printf("Voltage = %.02f V \r\n", voltage);


	// Pull channel read information out of conv
//	channel = (conv & AD2_CHANNEL_MASK) >> AD2_CHANNEL_BIT;
//
//	//printf("Pin V%d = %.02f V \r\n", channel + 1, voltage); //iterates
//	//sleep(1);
//
//	//read only channel 1 = Pin V2
//	if(channel == 1) {
//	printf("Pin V%d = %.02f V \r\n", channel + 1, voltage); //iterates
//	sleep(1);
	}
}
